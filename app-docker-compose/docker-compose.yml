version: '3.8'

services:
  kafka:
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - cluster_app-network
    restart: always

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: cab-aggregator-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 98479847
    ports:
      - "8180:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 15s
      timeout: 10s
    networks:
      - cluster_app-network

  driver-microservice:
    build:
      context: /Users/aliaksei/Desktop/modsen-trainship/driver-microservice
      dockerfile: Dockerfile
    container_name: driver-microservice
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cab-aggregator-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 98479847
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    healthcheck:
      test: [ "CMD-SHELL", "curl --write-out '%{http_code}' --silent --output /dev/null http://localhost:8082/" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - cluster_app-network

networks:
  cluster_app-network:
    name: "cluster_app-network"
    external: true
    driver: bridge